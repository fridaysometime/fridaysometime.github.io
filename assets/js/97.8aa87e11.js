(window.webpackJsonp=window.webpackJsonp||[]).push([[97],{227:function(v,_,i){"use strict";i.r(_);var l=i(0),e=Object(l.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var v=this,_=v.$createElement,i=v._self._c||_;return i("div",{staticClass:"content"},[i("h2",{attrs:{id:"linux基础"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#linux基础","aria-hidden":"true"}},[v._v("#")]),v._v(" Linux基础")]),v._v(" "),i("ol",[i("li",[i("p",[v._v("10个linux命令")]),v._v(" "),i("ul",[i("li",[v._v("ls 查看目录中的文件")]),v._v(" "),i("li",[v._v("cd /home 进入 '/ home' 目录；cd .. 返回上一级目录；cd ../.. 返回上两级目录")]),v._v(" "),i("li",[v._v("mkdir dir1 创建一个叫做 'dir1' 的目录")]),v._v(" "),i("li",[v._v("rmdir dir1 删除一个叫做 'dir1' 的目录 （只能删除空目录）")]),v._v(" "),i("li",[v._v("rm -f file1 删除一个叫做 'file1' 的文件'，-f 参数，忽略不存在的文件，从不给出提示。")]),v._v(" "),i("li",[v._v("rm -rf /mulu 目录下面文件以及子目录下文件")]),v._v(" "),i("li",[v._v("cp /test1/file1 /test3/file2 如将/test1目录下的file1复制到/test3目录，并将文件名改为file2")]),v._v(" "),i("li",[v._v("mv /test1/file1 /test3/file2 如将/test1目录下的file1移动到/test3 目录，并将文件名改为file2")]),v._v(" "),i("li",[v._v("mv * ../ Linux当前目录所有文件移动到上一级目录")]),v._v(" "),i("li",[v._v("ps -ef|grep xxx 显示进程pid")]),v._v(" "),i("li",[v._v("kill 使用kill命令来终结进程。先使用ps命令找到进程id，使用kill -9命令，终止进程。")]),v._v(" "),i("li",[v._v("tar –xvf file.tar 解压 tar包")]),v._v(" "),i("li",[v._v("unzip file.zip 解压zip")]),v._v(" "),i("li",[v._v("unrar e file.rar 解压rar")]),v._v(" "),i("li",[v._v("free -m 查看服务器内存使用情况")])])]),v._v(" "),i("li",[i("p",[v._v("PS查看进程")]),v._v(" "),i("ul",[i("li",[i("p",[v._v("显示所有进程")]),v._v(" "),i("p",[v._v("ps -aux")])])]),v._v(" "),i("ul",[i("li",[v._v("grep是搜索关键字")])]),v._v(" "),i("blockquote",[i("p",[v._v("ps -ef | grep java")])]),v._v(" "),i("ul",[i("li",[v._v("-aux 显示所有状态")])]),v._v(" "),i("blockquote",[i("p",[v._v("ps -aux | grep java")])])]),v._v(" "),i("li",[i("p",[v._v("kill杀掉进程")]),v._v(" "),i("p",[v._v("kill命令是通过发送信号给进程达到中断的目的")]),v._v(" "),i("ul",[i("li",[v._v("kill 命令用于终止进程")]),v._v(" "),i("li",[v._v("-9 强迫进程立即停止")])]),v._v(" "),i("blockquote",[i("p",[v._v("kill -9 [PID]")]),v._v(" "),i("p",[v._v("发送的信号是：SIGKILL，相当于exit，不能被捕捉或忽略，所以会立即杀死进程")]),v._v(" "),i("p",[i("strong",[v._v("kill -11")]),v._v("：发送的信号是：SIGTERM，当进程接受到这个信号后，大部分会释放自己的资源，然后再停止。但是有一部分，接收到信号以后，可以不立即停止，例如如果正在等待IO，则不会立即作出响应。所以SIGTERM信号会被阻塞、忽略")])])]),v._v(" "),i("li",[i("p",[v._v("启动服务")]),v._v(" "),i("p",[v._v("./start.sh")])]),v._v(" "),i("li",[i("p",[v._v("查看日志")]),v._v(" "),i("p",[v._v("tail -f xx.out")]),v._v(" "),i("p",[v._v("vi 文件名 #编辑方式查看，可修改\ncat 文件名 #显示全部文件内容\nmore 文件名 #分页显示文件内容\nless 文件名 #与 more 相似，更好的是可以往前翻页\ntail 文件名 #仅查看尾部，还可以指定行数\nhead 文件名 #仅查看头部,还可以指定行数")])]),v._v(" "),i("li",[i("p",[v._v("查看端口号")]),v._v(" "),i("p",[v._v("使用什么命令查看网络是否连通---netstat")]),v._v(" "),i("p",[v._v("netstat -anp | grep 端口号")]),v._v(" "),i("p",[v._v("linux 中查看监听网络端口命令:netstat -a")])]),v._v(" "),i("li",[i("p",[v._v("find查找文件")]),v._v(" "),i("p",[v._v("如果知道一个文件名称，怎么查这个文件在linux下的哪个目录，如：要查找tnsnames.ora文件")]),v._v(" "),i("blockquote",[i("p",[v._v("find / -name tnsnames.ora")])]),v._v(" "),i("p",[v._v("find / -name httpd.conf　　#在根目录下查找文件httpd.conf，表示在整个硬盘查找\nfind /etc -name httpd.conf　　#在/etc目录下文件httpd.conf\nfind /etc -name '"),i("em",[v._v("srm")]),v._v("'　　#使用通配符*(0或者任意多个)。表示在/etc目录下查找文件名中含有字符串‘srm’的文件find . -name 'srm*' 　　#表示当前目录下查找文件名开头是字符串‘srm’的文件")]),v._v(" "),i("p",[v._v("按照文件特征查找 　　　　\nfind / -amin -10 　　# 查找在系统中最后10分钟访问的文件(access time)\nfind / -atime -2　　 # 查找在系统中最后48小时访问的文件\nfind / -empty 　　# 查找在系统中为空的文件或者文件夹\nfind / -group cat 　　# 查找在系统中属于 group为cat的文件\nfind / -mmin -5 　　# 查找在系统中最后5分钟里修改过的文件(modify time)\nfind / -mtime -1 　　#查找在系统中最后24小时里修改过的文件\nfind / -user fred 　　#查找在系统中属于fred这个用户的文件\nfind / -size +10000c　　#查找出大于10000000字节的文件(c:字节，w:双字，k:KB，M:MB，G:GB)\nfind / -size -1000k 　　#查找出小于1000KB的文件")]),v._v(" "),i("p",[v._v("linux文档的搜索\nwhereis  locate(这两者是直接搜索数据库，速度快)")]),v._v(" "),i("p",[v._v("find（搜索硬盘，速度较慢，但数据最齐全） which（用来搜索执行挡$Path设置的目录）\nwhich ls\nwhereis file //找出file的位置\nlocate file//查找所有目录下的文件\nfind file//查看当前目录下的所有文件")])]),v._v(" "),i("li",[i("p",[v._v("每天早上6点到12点，每隔2小时执行一次/usr/bin/httpd.sh怎么实现")]),v._v(" "),i("p",[v._v("答：crontab -e 然后添加一行")]),v._v(" "),i("p",[v._v("0 6，8，10，12 * * * /bin/bash /usr/bin/httpd.sh")])]),v._v(" "),i("li",[i("p",[v._v("Linux的文件系统目录配置")]),v._v(" "),i("p",[v._v("​\t/home  每个账号在该目录下都有一个文件夹，进行数据的管理\n​        /usr 有点像windows的program files和winNT结合的目录，主要包括系统的主要程序、本机端额外安装的软件、图形接口所需要的文档、额外的函数库、共享目录与文件等\n​        /bin  /usr/bin  /usr/local/bin 存放执行挡  如可执行的指令等\n​        /boot 存放linux开机会用到的文件\n​        /dev 存放linux的任何装置和接口设备文档\n​        /etc 存放系统设定文档 如账号密码文件、各种服务的起始档等\n​        /lib  /usr/lib /usr/local/lib 系统使用的函数库放置的目录\n​        /mnt /media 是软盘和光盘预设挂载点的地方\n​        /opt 主机额外安装软件所摆放的目录\n​        /proc 该目录是一个虚拟档案系统，他放置的数据都是在内存中，所         以本身不占用任何的硬盘空间\n​        /root 系统管理员的家目录\n​        /sbin  /usr/sbin  /usr/local/sbin 放置一些只有系统管理员才能动用          的执行指令\n​        /srv 一些服务启动之后，这些服务所需要取用的数据目录\n​        /tmp 让一般使用者或者正在执行的程序暂时放置档案的地方\n​        /var  主要针对系统执行过程中，常态性变动档案放置的目录\n文档的路径有：绝对路径 (absolute) 与相对路径 (relative)。\n绝对路径为：由根目录 (/) 开始写起的文件名或目录名称\n相对路径为相对于目前路径的文件名写法。 ./表示相对当前路径，../表示相对于上一级目录的路径，~代表home目录，~account代表当前账号的home目录）")])]),v._v(" "),i("li",[i("p",[v._v("文档链接\n软连接：源文件消失，目的文件也消失\n硬连接： 其中一个修改，另一个也修改，但删除源文件时，目的文件不删除\nIn file1 file2 //建立file1的链接，命名为file2\nIn -s file1 file2 //建立file1的软连接")])]),v._v(" "),i("li",[i("p",[v._v("管道")]),v._v(" "),i("p",[i("strong",[v._v("管道就是将前一个命令的 标准输出 作为后一个命令的 标准输入。")])]),v._v(" "),i("p",[v._v("管道是一种通信机制，通常用于进程间的通信（也可通过socket进行网络通信），它表现出来的形式将前面每一个进程的输出（stdout）直接作为下一个进程的输入（stdin）。")]),v._v(" "),i("p",[v._v("管道命令使用"),i("code",[v._v("|")]),v._v("作为界定符号，管道命令与上面说的连续执行命令不一样")]),v._v(" "),i("p",[v._v("常用：tail -1000f catalina.out|grep keyword")])]),v._v(" "),i("li",[i("p",[v._v("创建文件")]),v._v(" "),i("p",[v._v("典型的如 touch，vi 也可以创建文件，其实只要向一个不存在的文件输出，都会创建文件")])]),v._v(" "),i("li",[i("p",[v._v("权限修改")]),v._v(" "),i("p",[v._v("chmod")]),v._v(" "),i("p",[v._v("chmodu+xfile给file的属主增加执行权限chmodu+xfile给file的属主增加执行权限 chmod 751 file 给 file 的属主分配读、写、执行(7)的权限，给 file 的所在组分配读、执行(5)的权限，给其他用户分配执行(1)的权限\nchmodu=rwx,g=rx,o=xfile上例的另一种形式chmodu=rwx,g=rx,o=xfile上例的另一种形式 chmod =r file 为所有用户分配读权限\nchmod444file同上例chmod444file同上例 chmod a-wx,a+r file同上例\n$ chmod -R u+r directory 递归地给 directory 目录下所有文件和子目录的属主分配读的权限")]),v._v(" "),i("p",[v._v("chmod 777 a.txt 修改文件\nchmod -R 777 hello 修改目录")])]),v._v(" "),i("li",[i("p",[v._v("用什么命令对一个文件的内容进行统计？(行号、单词数、字节数)")]),v._v(" "),i("p",[v._v("wc 命令 - c 统计字节数 - l 统计行数 - w 统计字数。")])]),v._v(" "),i("li",[i("p",[v._v("怎么使一个命令在后台运行")]),v._v(" "),i("p",[v._v("一般都是使用 & 在命令结尾来让程序自动运行。(命令后可以不追加空格)")])]),v._v(" "),i("li",[i("p",[v._v("使用什么命令查看 ip 地址及接口信息")]),v._v(" "),i("p",[v._v("ifconfig")])]),v._v(" "),i("li",[i("p",[v._v("awk")]),v._v(" "),i("p",[v._v("awk是一个强大的文本分析工具，相对于grep的查找，sed的编辑，awk在其对数据分析并生成报告时，显得尤为强大。简单来说awk就是把文件逐行的读入，以空格为默认分隔符将每行切片，切开的部分再进行各种分析处理。")]),v._v(" "),i("p",[v._v("awk是一种编程语言，用于对文本和数据进行处理的")]),v._v(" "),i("p",[v._v("具有强大的"),i("strong",[v._v("文本格式化")]),v._v("能力")]),v._v(" "),i("p",[v._v("利用命令awk，可以将一些文本整理成为我们想要的样子")]),v._v(" "),i("p",[v._v("命令awk是"),i("strong",[v._v("逐行")]),v._v("进行处理的")]),v._v(" "),i("ul",[i("li",[i("p",[v._v("对比")]),v._v(" "),i("ul",[i("li",[i("p",[v._v("命令grep，更适合单纯的查找或匹配文本")])]),v._v(" "),i("li",[i("p",[v._v("命令sed，更适合对匹配到的文本进行编辑")])]),v._v(" "),i("li",[i("p",[v._v("命令awk，更适合文本格式化，对文本进行较复杂的格式处理")])])])])]),v._v(" "),i("p",[v._v("最简单的例子：")]),v._v(" "),i("p",[v._v("awk -F: '{print $1,$2}' test.txt")]),v._v(" "),i("p",[v._v("-F:用于指定舒服的分隔符")]),v._v(" "),i("p",[v._v("打印出文件中，以：分割的文笔")])]),v._v(" "),i("li",[i("p",[v._v("网络连通性：")]),v._v(" "),i("p",[v._v("ping")])]),v._v(" "),i("li",[i("p",[v._v("查看日期")]),v._v(" "),i("p",[v._v("date")])]),v._v(" "),i("li",[i("p",[v._v("查看当前用户")]),v._v(" "),i("p",[v._v("whoami")])]),v._v(" "),i("li",[i("p",[v._v("切换用户")]),v._v(" "),i("p",[v._v("su")]),v._v(" "),i("p",[v._v("sudo su -切换到root用户")])]),v._v(" "),i("li",[i("p",[v._v("如何在性能测试的时候查看进程")]),v._v(" "),i("p",[v._v("top")]),v._v(" "),i("p",[v._v("iostat查看CUP和各设备IO使用率")]),v._v(" "),i("p",[v._v("vmstat查看内存使用情况")])]),v._v(" "),i("li",[i("p",[v._v("Sed")]),v._v(" "),i("p",[v._v("如何替换一个文件中的字符串")]),v._v(" "),i("div",{staticClass:"language- line-numbers-mode"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[v._v("sed  's/原字符串/替换字符串/' 目录名\n例如；sed  'aaa/bbb'  test.txt // 将test.txt中'aaa'替换成'bbb'\n")])]),v._v(" "),i("div",{staticClass:"line-numbers-wrapper"},[i("span",{staticClass:"line-number"},[v._v("1")]),i("br"),i("span",{staticClass:"line-number"},[v._v("2")]),i("br")])])]),v._v(" "),i("li",[i("p",[i("img",{attrs:{src:"https://images2015.cnblogs.com/blog/1030344/201703/1030344-20170316201635260-959773941.png",alt:"img"}})])]),v._v(" "),i("li",[i("p",[v._v("linux修改密码命令")]),v._v(" "),i("p",[v._v("passwd")])]),v._v(" "),i("li",[i("p",[v._v("如何找到一个文件中含有aaa 和 bbb和行")]),v._v(" "),i("div",{staticClass:"language- line-numbers-mode"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[v._v("grep 'aaa' *.txt|xargs grep 'bbb' \n")])]),v._v(" "),i("div",{staticClass:"line-numbers-wrapper"},[i("span",{staticClass:"line-number"},[v._v("1")]),i("br")])])])])])}],!1,null,null,null);_.default=e.exports}}]);