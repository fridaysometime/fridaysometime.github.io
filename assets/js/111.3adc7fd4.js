(window.webpackJsonp=window.webpackJsonp||[]).push([[111],{213:function(e,s,a){"use strict";a.r(s);var t=a(0),n=Object(t.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,s=e.$createElement,a=e._self._c||s;return a("div",{staticClass:"content"},[a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),a("p",[e._v("SQL 的基础使用，增删改查")])]),e._v(" "),a("h1",{attrs:{id:"sql基础"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql基础","aria-hidden":"true"}},[e._v("#")]),e._v(" SQL基础")]),e._v(" "),a("h2",{attrs:{id:"sql"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql","aria-hidden":"true"}},[e._v("#")]),e._v(" SQL")]),e._v(" "),a("p",[e._v("sql: 数据操作语言dml，数据定义语言ddl;")]),e._v(" "),a("h3",{attrs:{id:"sql-dml"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-dml","aria-hidden":"true"}},[e._v("#")]),e._v(" SQL DML")]),e._v(" "),a("ul",[a("li",[e._v("select")]),e._v(" "),a("li",[e._v("update")]),e._v(" "),a("li",[e._v("delete")]),e._v(" "),a("li",[e._v("insert int")])]),e._v(" "),a("h3",{attrs:{id:"sql-ddl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-ddl","aria-hidden":"true"}},[e._v("#")]),e._v(" SQL DDL")]),e._v(" "),a("ul",[a("li",[e._v("create db")]),e._v(" "),a("li",[e._v("alter db")]),e._v(" "),a("li",[e._v("create table")]),e._v(" "),a("li",[e._v("alter table")]),e._v(" "),a("li",[e._v("drop table")]),e._v(" "),a("li",[e._v("create index")]),e._v(" "),a("li",[e._v("drop index")])]),e._v(" "),a("p",[a("strong",[e._v("常用-MySQL")])]),e._v(" "),a("ol",[a("li",[a("strong",[e._v("top")]),e._v(":select  top number(percent) columns_name from table= select column_name from table limit number;")]),e._v(" "),a("li",[a("strong",[e._v("like")]),e._v(": select column_name from table where column_name like '%x%';  (以X开始：'X%'; 以X结束：'%X'; 包含X：'%X%' ; 不包含：not like);")]),e._v(" "),a("li",[a("strong",[e._v("in")]),e._v(": select column_name from table where column_name in (v1,v2...);")]),e._v(" "),a("li",[e._v("**BETWEEN **:SELECT column_name(s) FROM table_name WHERE column_name BETWEEN value1 AND value2")]),e._v(" "),a("li",[a("strong",[e._v("表的Alias")]),e._v("：\nSELECT column_name(s)\nFROM table_name\nAS alias_name")]),e._v(" "),a("li",[a("strong",[e._v("列的Alias")]),e._v("：\nSELECT column_name AS alias_name\nFROM table_name")]),e._v(" "),a("li",[a("strong",[e._v("inner join")]),e._v(":\nSELECT column_name(s)\nFROM table_name1\nINNER JOIN table_name2\nON table_name1.column_name=table_name2.column_name;")])]),e._v(" "),a("p",[a("strong",[e._v("functions")]),e._v(":")]),e._v(" "),a("ol",[a("li",[a("p",[a("strong",[e._v("group by")]),e._v(":\nSELECT column_name, aggregate_function(column_name)\nFROM table_name\nWHERE column_name operator value\nGROUP BY column_name")]),e._v(" "),a("p",[e._v("聚合函数以外的列都要在group by后面的列出现")])]),e._v(" "),a("li",[a("p",[a("strong",[e._v("having")]),e._v("：在 SQL 中增加 HAVING 子句原因是，WHERE 关键字无法与合计函数一起使用；\nSELECT column_name, aggregate_function(column_name)\nFROM table_name\nWHERE column_name operator value\nGROUP BY column_name\nHAVING aggregate_function(column_name) operator value")])])]),e._v(" "),a("h3",{attrs:{id:"sql的索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql的索引","aria-hidden":"true"}},[e._v("#")]),e._v(" SQL的索引")]),e._v(" "),a("p",[e._v("一般的应用系统，读写比例在10:1左右，而且插入操作和一般的更新操作很少出现性能问题，在生产环境中，我们遇到最多的，也是最容易出问题的，还是一些复杂的查询操作，因此对查询语句的优化显然是重中之重。说起加速查询，就不得不提到索引了；")]),e._v(" "),a("p",[e._v("索引在MySQL中也叫做“键”，是存储引擎用于快速找到记录的一种数据结构。索引对于良好的性能\n非常关键，尤其是当表中的数据量越来越大时，索引对于性能的影响愈发重要。\n索引优化应该是对查询性能优化最有效的手段了。索引能够轻易将查询性能提高好几个数量级。")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("索引的原理：索引的目的在于提高查询效率，与我们查阅图书所用的目录是一个道理：先定位到章，然后定位到该章下的一个小节，然后找到页数。相似的例子还有：查字典，查火车车次，飞机航班等")]),e._v(" "),a("p",[a("strong",[e._v("本质都是：通过不断地缩小想要获取数据的范围来筛选出最终想要的结果，同时把随机的事件变成顺序的事件，也就是说，有了这种索引机制，我们可以总是用同一种查找方式来锁定数据。")])])])]),e._v(" "),a("h3",{attrs:{id:"mysql的索引管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql的索引管理","aria-hidden":"true"}},[e._v("#")]),e._v(" MYSQL的索引管理")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("功能")]),e._v(" "),a("p",[e._v("索引的功能就是加速查找，primary key ,unique,联合唯一也都是索引")])]),e._v(" "),a("li",[a("p",[e._v("分类")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("普通索引index :加速查找\n主键索引：primary key ：加速查找+约束（不为空且唯一）\n唯一索引：unique：加速查找+约束 （唯一）\n联合索引\n    -primary key(id,name):联合主键索引\n    -unique(id,name):联合唯一索引\n    -index(id,name):联合普通索引\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br")])])]),e._v(" "),a("li",[a("p",[e._v("索引的两大类型")]),e._v(" "),a("p",[e._v("hash和btree")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("hash类型的索引：查询单条快，范围查询慢\nbtree类型的索引：b+树，层数越多，数据量指数级增长（我们就用它，因为innodb默认支持它）\n不同的存储引擎支持的索引类型也不一样\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])])]),e._v(" "),a("li",[a("p",[e._v("创建索引")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("建表的时候创建")])]),e._v(" "),a("li",[a("p",[e._v("建表后创建：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("create index name on s1(name); #添加普通索引\ncreate unique age on s1(age);添加唯一索引\nalter table s1 add primary key(id); #添加住建索引，也就是给id字段增加一个主键约束\ncreate index name on s1(id,name); #添加普通联合索引\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])])])])]),e._v(" "),a("li",[a("p",[e._v("并不是有索引就能提高查询速度，也分情况")])]),e._v(" "),a("li",[a("p",[e._v("读取查询一个百万计数据库该怎么办，读取前十条指令")])])]),e._v(" "),a("p",[a("img",{attrs:{src:"http://my-blog-to-use.oss-cn-beijing.aliyuncs.com/18-10-2/70973487.jpg",alt:'[æç"´å¯¼å¾-ç´¢å¼ç¯]'}})]),e._v(" "),a("h3",{attrs:{id:"mysql例题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql例题","aria-hidden":"true"}},[e._v("#")]),e._v(" MySQL例题")]),e._v(" "),a("p",[e._v("创建表")]),e._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[e._v("创建表\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("、创建student和score表\n\ncreate "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("or")]),e._v(" replace table employees"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("\n\nempID  INT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("  NOT NULL  UNIQUE  PRIMARY KEY  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n\nempName  VARCHAR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("  NOT NULL "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#姓名")]),e._v("\n\nsex  VARCHAR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#性别")]),e._v("\n\nbirth  date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#出生日期")]),e._v("\n\ndeptID  INT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#部门编码")]),e._v("\n\njobs VARCHAR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#工作岗位")]),e._v("\n\nfirJob date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#开始工作的日期")]),e._v("\n\nhiredate date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#开始工作的日期")]),e._v("\n\npoliticalStatus  VARCHAR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 政治面貌")]),e._v("\n\nleader  INT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#领导编码")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n\ncreate "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("or")]),e._v(" replace table salary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("\n\nsid  INT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("  NOT NULL  UNIQUE  PRIMARY KEY  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n\nempID INT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("not")]),e._v(" null"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n\nsalary INT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("not")]),e._v(" null"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#工资")]),e._v("\n\nlastedit date "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#上次调薪日期")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n\ncreate "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("or")]),e._v(" replace table departments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("\n\ndeptid  INT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("  NOT NULL  UNIQUE  PRIMARY KEY  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n\ndeptname VARCHAR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("not")]),e._v(" null"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#部门名称")]),e._v("\n\nfaterdeptid INT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 上级部门编码")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br"),a("span",{staticClass:"line-number"},[e._v("17")]),a("br"),a("span",{staticClass:"line-number"},[e._v("18")]),a("br"),a("span",{staticClass:"line-number"},[e._v("19")]),a("br"),a("span",{staticClass:"line-number"},[e._v("20")]),a("br"),a("span",{staticClass:"line-number"},[e._v("21")]),a("br"),a("span",{staticClass:"line-number"},[e._v("22")]),a("br"),a("span",{staticClass:"line-number"},[e._v("23")]),a("br"),a("span",{staticClass:"line-number"},[e._v("24")]),a("br"),a("span",{staticClass:"line-number"},[e._v("25")]),a("br"),a("span",{staticClass:"line-number"},[e._v("26")]),a("br"),a("span",{staticClass:"line-number"},[e._v("27")]),a("br"),a("span",{staticClass:"line-number"},[e._v("28")]),a("br"),a("span",{staticClass:"line-number"},[e._v("29")]),a("br"),a("span",{staticClass:"line-number"},[e._v("30")]),a("br"),a("span",{staticClass:"line-number"},[e._v("31")]),a("br"),a("span",{staticClass:"line-number"},[e._v("32")]),a("br"),a("span",{staticClass:"line-number"},[e._v("33")]),a("br"),a("span",{staticClass:"line-number"},[e._v("34")]),a("br"),a("span",{staticClass:"line-number"},[e._v("35")]),a("br"),a("span",{staticClass:"line-number"},[e._v("36")]),a("br"),a("span",{staticClass:"line-number"},[e._v("37")]),a("br"),a("span",{staticClass:"line-number"},[e._v("38")]),a("br"),a("span",{staticClass:"line-number"},[e._v("39")]),a("br"),a("span",{staticClass:"line-number"},[e._v("40")]),a("br"),a("span",{staticClass:"line-number"},[e._v("41")]),a("br"),a("span",{staticClass:"line-number"},[e._v("42")]),a("br"),a("span",{staticClass:"line-number"},[e._v("43")]),a("br"),a("span",{staticClass:"line-number"},[e._v("44")]),a("br"),a("span",{staticClass:"line-number"},[e._v("45")]),a("br"),a("span",{staticClass:"line-number"},[e._v("46")]),a("br"),a("span",{staticClass:"line-number"},[e._v("47")]),a("br"),a("span",{staticClass:"line-number"},[e._v("48")]),a("br"),a("span",{staticClass:"line-number"},[e._v("49")]),a("br")])]),a("p",[a("strong",[e._v("问题列表")])]),e._v(" "),a("p",[a("strong",[e._v("单表查询")])]),e._v(" "),a("ol",[a("li",[a("p",[e._v("显示所有职工的基本信息")]),e._v(" "),a("p",[e._v("select * from employees")])]),e._v(" "),a("li",[a("p",[e._v("查询所有职工所属部门的部门号，不显示重复的部门号")]),e._v(" "),a("p",[e._v("select distinct e.deptID from employees e")])]),e._v(" "),a("li",[a("p",[e._v("求出所有职工的人数")]),e._v(" "),a("p",[e._v("select count(1) from employees")])]),e._v(" "),a("li",[a("p",[e._v("列出最高工和最低工资")]),e._v(" "),a("p",[e._v("select max(s.salary) as '最高工资',min(s.salary) as '最低工资' from salary s")])]),e._v(" "),a("li",[a("p",[e._v("列出职工的平均工资和总工资")]),e._v(" "),a("p",[e._v("select AVG(s.salary) as '平均工资',SUM(s.salary) as '总工资' from salary s")])]),e._v(" "),a("li",[a("p",[e._v("显示所有女职工的年龄")]),e._v(" "),a("p",[e._v("select e.empID, e.empName, (DATEDIFF(CURDATE(),e.birth) DIV 365) as '年龄' from employees e where e.sex = '女';")])]),e._v(" "),a("li",[a("p",[e._v("列出所有姓刘的职工的职工号、姓名和出生日期")]),e._v(" "),a("p",[e._v("select e.empID,e.empName,e.birth from employees e where e.empName like '刘%'")])]),e._v(" "),a("li",[a("p",[e._v("列出1990年以前出生的职工的姓名、参加工作日期")]),e._v(" "),a("p",[e._v("select e.empName,e.firJob from employees e where YEAR(e.firJob)<1990")])]),e._v(" "),a("li",[a("p",[e._v("列出总人数大于4的部门号和总人数")]),e._v(" "),a("p",[e._v("select e.deptID, count(1) from employees e group by e.deptID having count(1)>4")])]),e._v(" "),a("li",[a("p",[e._v("列出所有陈姓和李姓的职工姓名")]),e._v(" "),a("p",[e._v("select e.empName  from employees e  where e.empName like'张%' or e.empName like'李%'")])]),e._v(" "),a("li",[a("p",[e._v("列出所有部门号为1002和1003的职工号、姓名")]),e._v(" "),a("p",[e._v("select e.empID, e.empName  from employees e  where e.deptID in (1002,1003);")])]),e._v(" "),a("li",[a("p",[e._v("将职工表worker中的职工按出生的先后顺序排序")]),e._v(" "),a("p",[e._v("select * from employees e order by e.birth asc")])]),e._v(" "),a("li",[a("p",[e._v("求出各部门党员的人数")]),e._v(" "),a("p",[e._v("select e.deptID,count(1) from employees e  where e.politicalStatus = '党员' GROUP BY e.deptID")])])]),e._v(" "),a("p",[a("strong",[e._v("多表查询")])]),e._v(" "),a("p",[e._v("1、列出每名职工的职工号、姓名和部门名。")]),e._v(" "),a("p",[e._v("select e.empID, e.empName, d.deptname  from employees e,departments d  where e.deptID = d.deptid")]),e._v(" "),a("p",[e._v("2、列出市场部的所有女职工的姓名和政治面貌。")]),e._v(" "),a("p",[e._v("select e.empName,e.politicalStatus,d.deptname from employees e,departments d where e.deptID = d.deptid and  e.sex= '女' and d.deptname = '市场部'")]),e._v(" "),a("p",[e._v("3、显示所有职工的姓名、部门名和工资数。")]),e._v(" "),a("p",[e._v("select e.empName,d.deptname,s.salary from employees e LEFT JOIN departments d on e.deptID = d.deptid LEFT JOIN salary s on e.empID = s.empID")]),e._v(" "),a("p",[e._v("4、显示所有职工的职工号、姓名、部门名和工资，并按部门名顺序排列。")]),e._v(" "),a("p",[e._v("select e.empid, e.empName,d.deptname,s.salary  from employees e LEFT JOIN departments d on e.deptID = d.deptid LEFT JOIN salary s on e.empID = s.empID ORDER BY e.deptID")]),e._v(" "),a("p",[e._v("5、显示各部门名和该部门的所有职工平均工资。")]),e._v(" "),a("p",[e._v("SELECT d.deptname, AVG(s.salary)  from  departments d LEFT JOIN employees e on d.deptid = e.deptID LEFT JOIN salary s on e.empID = s.empID GROUP BY d.deptname")]),e._v(" "),a("p",[e._v("6、显示所有平均工资高于1200的部门名和对应的平均工资。")]),e._v(" "),a("p",[e._v("SELECT d.deptname, AVG(s.salary)  from  departments d LEFT JOIN employees e on d.deptid = e.deptID LEFT JOIN salary s on e.empID = s.empID GROUP BY d.deptname  having AVG(s.salary)>1200")]),e._v(" "),a("p",[e._v("7、查询刘欣所在的部门。")]),e._v(" "),a("p",[e._v("select d.deptname from employees e, departments d  where e.deptID = d.deptid  and e.empName = '刘欣'")]),e._v(" "),a("p",[e._v("8、查询部门名为财务处的职工的情况。")]),e._v(" "),a("p",[e._v("select * from employees e,departments d where e.deptID = d.deptid and d.deptname ='财务处'")]),e._v(" "),a("p",[e._v("9、列出工资在1000－2000之间的所有职工姓名。")]),e._v(" "),a("p",[e._v("select e.empName,s.salary from salary s,employees e where s.salary between 1000 and 2000 and s.empID = e.empID")]),e._v(" "),a("p",[e._v("10、显示工资最高的前3名职工的职工号和姓名。")]),e._v(" "),a("p",[e._v("select e.empID, e.empName from salary s, employees e where s.empID = e.empID ORDER BY s.salary desc LIMIT 3")])])}],!1,null,null,null);s.default=n.exports}}]);