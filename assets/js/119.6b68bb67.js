(window.webpackJsonp=window.webpackJsonp||[]).push([[119],{205:function(s,t,a){"use strict";a.r(t);var n=a(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("div",{staticClass:"content"},[a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),a("p",[s._v("每次使用github上传下载代码的时候都要重新百度一遍，就把自己经常用到的命令记录下来，下次不用再去百度了")])]),s._v(" "),a("h1",{attrs:{id:"github-basic"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#github-basic","aria-hidden":"true"}},[s._v("#")]),s._v(" github_basic")]),s._v(" "),a("h2",{attrs:{id:"基本创建仓库等"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本创建仓库等","aria-hidden":"true"}},[s._v("#")]),s._v(" 基本创建仓库等")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("创建仓库，安装Git bash")])]),s._v(" "),a("li",[a("p",[s._v("打开git bash, 输入以下命令生成密钥用来验证身份")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("ssh-keygen -C "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'your@email.address'")]),s._v(" -t rsa\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("连续三个回车之后会在windows当前用户目录下生成.ssh文件夹，和linux一样。（默认路径下：比如C盘user下）")])]),s._v(" "),a("li",[a("p",[s._v("把文件夹下的id_rsa.pub文件内容全部复制")])]),s._v(" "),a("li",[a("p",[s._v("打开github账户的setting，选择SSH and GPG keys")])]),s._v(" "),a("li",[a("p",[s._v("选new ssh keys: 粘贴过去保存；")])]),s._v(" "),a("li",[a("p",[s._v("Git bash验证认证正确：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" -T git@github.com\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("正确结果会显示：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("Warning:Permanently added "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'github.com,207.97.227.239'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("RSA"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" to the list of known hosts.\nHi Flowerowl"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" You've successfully authenticated, but GitHub does not provide shell access.\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])])]),s._v(" "),a("p",[s._v("​\twarning 不用理会。")]),s._v(" "),a("ol",{attrs:{start:"7"}},[a("li",[a("p",[s._v("clone新建的仓库到本地")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone XXX.git\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("拷贝文件到本地该目录下，切换到git bash命令行，该目录的根目录下：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" init\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" add "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'所有新增文件或文件夹'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'所有新增文件或文件夹'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote add origin https://github.com/Flowerowl/stumansys.git"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("若报错already exists,要先remove，git remote "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" origin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin master"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("若报错failed to push som refs to,先pull再push，执行git pull origin master"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])])])]),s._v(" "),a("p",[a("strong",[s._v("git init初始化")])]),s._v(" "),a("p",[s._v("git init 命令只做一件事，就是在项目根目录下创建一个"),a("code",[s._v(".git")]),s._v("子目录，用来保存版本信息。")]),s._v(" "),a("p",[a("strong",[s._v("git add")])]),s._v(" "),a("p",[s._v("git add --all/ git add .")]),s._v(" "),a("p",[s._v("对当前项目的所有变动改的文件保存并存在暂存区")]),s._v(" "),a("p",[a("strong",[s._v("git commit")])]),s._v(" "),a("p",[s._v("暂存区保留本次变动的文件信息，等到修改的差不多，把信息写历史，相当于生成当前项目的一个快照；")]),s._v(" "),a("p",[s._v("项目的历史由不同时间点的快照构成；git可以将项目恢复到任意一个快照；")]),s._v(" "),a("p",[s._v("快照在 Git 里面有一个专门名词，叫做 commit，生成快照又称为完成一次提交。")]),s._v(" "),a("p",[s._v("git提供git commit命令，简化提交操作，保存进缓存区后，只要git commit一个命令，就同时提交目录结构和说明，生成快照；")]),s._v(" "),a("p",[s._v("git commit -m 'description'")]),s._v(" "),a("p",[a("strong",[s._v("git checkout")])]),s._v(" "),a("p",[s._v("切换到某个快照")])])}],!1,null,null,null);t.default=e.exports}}]);