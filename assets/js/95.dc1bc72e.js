(window.webpackJsonp=window.webpackJsonp||[]).push([[95],{229:function(t,e,_){"use strict";_.r(e);var v=_(0),r=Object(v.a)({},function(){var t=this,e=t.$createElement,_=t._self._c||e;return _("div",{staticClass:"content"},[t._m(0),t._v(" "),_("p",[t._v("TestNG与JUnit的相同点")]),t._v(" "),t._m(1),t._v(" "),_("p",[t._v("TestNG与JUnit的不同点：")]),t._v(" "),t._m(2),t._v(" "),_("p",[t._v("testng优点:")]),t._v(" "),_("p",[t._v("1.1 漂亮的HTML格式测试报告")]),t._v(" "),_("p",[t._v("1.2 支持并发测试")]),t._v(" "),_("p",[t._v("1.3 参数化测试更简单")]),t._v(" "),_("p",[t._v("1.4 支持输出日志")]),t._v(" "),_("p",[t._v("1.5 支持更多功能的注解")]),t._v(" "),t._m(3),t._v(" "),_("p",[t._v("@BeforeSuite > @BeforeTest > @BeforeMethod > @Test > @AfterMethod > @AfterTest > @AfterSuite")]),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),_("p",[t._v("测试集合：在自动化测试的执行过程中，通常会产生批量运行多个测试用例的需求，此需求称为运行测试集合（Test Suite）")]),t._v(" "),_("p",[t._v("TestNG的测试用例可以是相互独立的，也可以按照特定的顺序来执行（配置TestNG.xml）")]),t._v(" "),_("p",[t._v("配置testNG.xml文件---指定测试类和类中的测试方法")]),t._v(" "),t._m(6),t._v(" "),_("p",[t._v('@Test(dependsOnMethod = {"方法名称"})')]),t._v(" "),_("p",[t._v("被依赖的方法优先于此方法执行")]),t._v(" "),t._m(7),t._v(" "),_("p",[t._v("@Test(priority = 0/1/2/3/4/…)")]),t._v(" "),_("p",[t._v("按照数字大小顺序优先执行，优先执行1，然后是2…")]),t._v(" "),t._m(8),t._v(" "),_("p",[t._v("@Test(priority = 0/1… , enabled = false)")]),t._v(" "),_("p",[t._v("执行结束后，在测试报告中显示跳过的测试用例数，例如skip=1")]),t._v(" "),t._m(9),t._v(" "),_("p",[t._v("参数化测试（@Parameters-》通过xml文件从外部给测试方法传参）："),_("Parameter",{attrs:{name:"Type",value:"chrome"}}),t._v("  -》")],1),t._v(" "),t._m(10),t._v(" "),_("p",[t._v("（@DataProvider）")]),t._v(" "),t._m(11),t._v(" "),_("p",[t._v('@Test(groups = {"人"})')]),t._v(" "),_("p",[t._v("public void student(){")]),t._v(" "),_("p",[t._v('System.out.println("学生方法被调用");')]),t._v(" "),_("p",[t._v('Reporter.log("学生方法自定义日志");')]),t._v(" "),_("p",[t._v("}")])])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"java常用的测试框架"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#java常用的测试框架","aria-hidden":"true"}},[this._v("#")]),this._v(" JAVA常用的测试框架")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("使用annotation，且大部分annotation相同。")]),this._v(" "),e("li",[this._v("都可以进行单元测试（Unit test）。")]),this._v(" "),e("li",[this._v("都是针对Java测试的工具。")])])},function(){var t=this,e=t.$createElement,_=t._self._c||e;return _("ol",[_("li",[t._v("JUnit只能进行单元测试，TestNG可以进行单元测试，功能测试，端到端测试，集成测试等。")]),t._v(" "),_("li",[t._v("TestNG需要一个额外的xml配置文件，配置测试的class、method甚至package。")]),t._v(" "),_("li",[t._v("TestNG的运行方式更加灵活：命令行、ant和IDE，JUnit只能使用IDE。")]),t._v(" "),_("li",[t._v("TestNG的annotation更加丰富，比如@ExpectedExceptions、@DataProvider等。")]),t._v(" "),_("li",[t._v("测试套件运行失败，JUnit 4会重新运行整个测试套件。TestNG运行失败时，会创建一个XML文件说明失败的测试，利用这个文件执行程序，就不会重复运行已经成功的测试。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("TestNG常用注解：执行顺序如下")])])},function(){var t=this,e=t.$createElement,_=t._self._c||e;return _("table",[_("thead",[_("tr",[_("th",[t._v("@BeforeSuite")]),t._v(" "),_("th",[t._v("表示会在当前测试集合中的任意一个测试用例开始运行前执行")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("@AfterSuite")]),t._v(" "),_("td",[t._v("表示会在当前测试集合中的所有测试程序运行结束之后执行")])]),t._v(" "),_("tr",[_("td",[t._v("@BeforeTest")]),t._v(" "),_("td",[t._v("表示会在Test中的任意一个测试用例开始运行前执行")])]),t._v(" "),_("tr",[_("td",[t._v("@AfterTest")]),t._v(" "),_("td",[t._v("表示会在Test中的所有测试用例运行结束后执行")])]),t._v(" "),_("tr",[_("td",[t._v("@BeforeGroups")]),t._v(" "),_("td",[t._v("分组测试用例的任一测试用例开始运行前执行")])]),t._v(" "),_("tr",[_("td",[t._v("@AfterGroups")]),t._v(" "),_("td",[t._v("分组测试用例的所有测试用例运行结束后执行")])]),t._v(" "),_("tr",[_("td",[t._v("@BeforeClass")]),t._v(" "),_("td",[t._v("在当前测试类的任意一个测试用例开始运行前执行")])]),t._v(" "),_("tr",[_("td",[t._v("@AfterClass")]),t._v(" "),_("td",[t._v("在当前测试类的所有测试用例运行结束后执行")])]),t._v(" "),_("tr",[_("td",[t._v("@BeforeMethod")]),t._v(" "),_("td",[t._v("在每个测试方法开始运行前执行")])]),t._v(" "),_("tr",[_("td",[t._v("@AfterMethod")]),t._v(" "),_("td",[t._v("在每个测试方法运行结束后执行")])]),t._v(" "),_("tr",[_("td",[t._v("@Test")]),t._v(" "),_("td",[t._v("被认为是一个测试方法，既一个测试用例")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("如何创建TestNG测试集合")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("依赖测试（dependsOnMethod）")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("特定顺序执行测试用例（priority）")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("如何跳过某个测试方法（enabled = false）")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("数据注解")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("数据驱动")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("测试报告中自定义日志（Reporter.log（“输入自定义内容”））")])])}],!1,null,null,null);e.default=r.exports}}]);